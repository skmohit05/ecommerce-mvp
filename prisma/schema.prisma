// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductEcommerceMvp {
  id                     String                 @id @default(uuid())
  name                   String
  priceInCents           Int
  filePath               String
  imagePath              String
  description            String
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 OrderEcommerceMvp[]
  downloadVerifications  DownloadVerificationEcommerceMvp[]
}

model UserEcommerceMvp {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    OrderEcommerceMvp[]
}

model OrderEcommerceMvp {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String
  productId String
  user      UserEcommerceMvp    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   ProductEcommerceMvp @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model DownloadVerificationEcommerceMvp {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   ProductEcommerceMvp  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
